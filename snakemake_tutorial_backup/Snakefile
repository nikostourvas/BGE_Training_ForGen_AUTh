SAMPLES = ["A", "B"]

rule all:
    input:
        "calls/all.vcf",
        expand("fastqc_untrimmed_reads/{sample}_fastqc.html", sample=SAMPLES),
        "multiqc_report.html"

rule fastqc_raw_reads:
    input:
        "raw_reads/{sample}.fastq"
    params:
        "fastqc_untrimmed_reads"
    output:
        "fastqc_untrimmed_reads/{sample}_fastqc.html",
    shell:
        "fastqc {input} -o {params}"

rule trim_reads:
    input:
        "raw_reads/{sample}.fastq"
    output:
        "trimmed_reads/{sample}_trim.fastq"
    shell:
        "trimmomatic SE {input} {output} SLIDINGWINDOW:4:20 MINLEN:25"
        
rule fastqc_trimmed_reads:
    input:
        "trimmed_reads/{sample}_trim.fastq"
    params:
        "fastqc_trimmed_reads"
    output:
        "fastqc_trimmed_reads/{sample}_trim_fastqc.html",
    shell:
        "fastqc {input} -o {params}"
        
rule multiqc:
    input:
        expand("fastqc_trimmed_reads/{sample}_trim_fastqc.html", sample=SAMPLES)
    params:
        "fastqc_trimmed_reads"
    output:
        "multiqc_report.html"
    shell:"multiqc {params} --force"
    
rule bwa_map:
    input:
        "reference/genome.fa",
        "trimmed_reads/{sample}_trim.fastq"
    output:
        "mapped_reads/{sample}.bam"
    shell:
        "bwa mem {input} | samtools view -Sb - > {output}"
        
rule samtools_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} "
        "-O bam {input} > {output}"
        
rule samtools_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"
        
rule bcftools_call:
    input:
        fa="reference/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=SAMPLES),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=SAMPLES)
    output:
        "calls/all.vcf"
    shell:
        "bcftools mpileup -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"
